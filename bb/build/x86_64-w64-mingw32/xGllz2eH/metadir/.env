AR_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-ar
AR_FOR_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-ar
AS_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-as
AS_FOR_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-as
BASH=/bin/bash
BASH_ALIASES=()
BASH_ARGC=([0]="0")
BASH_ARGV=()
BASH_CMDS=()
BASH_COMMAND='install -Dvm 755 "${WORKSPACE}/srcdir/exiftool/exiftool${exeext}" "${bindir}/exiftool${exeext}"'
BASH_EXECUTION_STRING=$'# Stop if we hit any errors.\nset -e\n\n# If we\'re running as `bash`, then use the `DEBUG` and `ERR` traps\nif [ $(basename $0) = "bash" ]; then\n    trap "RET=\\$?; \\\n          trap - DEBUG INT TERM ERR EXIT; \\\n          set +e +x; \\\n          auto_install_license; \\\n          save_env; \\\n          exit \\$RET" \\\n        EXIT\n\n    trap "RET=\\$?; \\\n          trap - DEBUG INT TERM ERR EXIT; \\\n          set +e +x; \\\n          echo Previous command \\$! exited with \\$RET >&2; \\\n          save_env; \\\n          exit \\$RET" \\\n        INT TERM ERR\n\n    # Start saving everything into our history\n    trap save_history DEBUG\nelse\n    # If we\'re running in `sh` or something like that, we need a\n    # slightly slimmer set of traps. :(\n    trap "RET=\\$?; \\\n          echo Previous command exited with \\$RET >&2; \\\n          set +e +x; \\\n          save_env; \\\n          exit \\$RET" \\\n        EXIT INT TERM\nfi\n\ncd $WORKSPACE/srcdir\ncd exiftool\nperl Makefile.PL\nmake -j${nproc}\nmake install\ninstall -Dvm 755 "${WORKSPACE}/srcdir/exiftool/exiftool${exeext}" "${bindir}/exiftool${exeext}"\ncp -r lib ${libdir}/\n\n'
BASH_LINENO=([0]="40")
BASH_SOURCE=([0]="/etc/profile.d/0_bb_utils.sh")
BASH_VERSION='5.1.16(1)-release'
BUILD_AR=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-ar
BUILD_AS=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-as
BUILD_CC=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-gcc
BUILD_CXX=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-g++
BUILD_DSYMUTIL=dsymutil
BUILD_FC=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-gfortran
BUILD_LD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-ld
BUILD_LIPO=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-lipo
BUILD_NM=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-nm
BUILD_OBJCOPY=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-objcopy
BUILD_OBJDUMP=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-objdump
BUILD_RANLIB=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-ranlib
BUILD_READELF=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-readelf
BUILD_STRIP=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-strip
CC=cc
CCACHE_COMPILERCHECK=content
CC_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-gcc
CC_FOR_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-gcc
CHARSET=UTF-8
CMAKE_HOST_TOOLCHAIN=/opt/toolchains/x86_64-linux-musl-cxx11/host_x86_64-linux-musl.cmake
CMAKE_TARGET_TOOLCHAIN=/opt/toolchains/x86_64-w64-mingw32-libgfortran3-cxx03/target_x86_64-w64-mingw32.cmake
CXX=c++
CXX_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-g++
CXX_FOR_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-g++
DIRSTACK=()
DSYMUTIL_BUILD=dsymutil
DSYMUTIL_FOR_BUILD=dsymutil
FC=gfortran
FC_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-gfortran
FC_FOR_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-gfortran
FORCE_SANDBOX_MODE=unprivileged
FUNCNAME=([0]="save_env")
GROUPS=()
HIDDEN_PS1=$'\\[\E[94m\\]sandbox\\[\E[0m\\]:\\[\E[33m\\]${PWD//$WORKSPACE/$\\{WORKSPACE\\}}\\[\E[0m\\] \\$ '
HISTFILE=/meta/.bash_history
HOSTAR=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-ar
HOSTAS=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-as
HOSTCC=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-gcc
HOSTCXX=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-g++
HOSTDSYMUTIL=dsymutil
HOSTFC=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-gfortran
HOSTLD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-ld
HOSTLIPO=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-lipo
HOSTNAME=eira
HOSTNM=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-nm
HOSTOBJCOPY=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-objcopy
HOSTOBJDUMP=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-objdump
HOSTRANLIB=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-ranlib
HOSTREADELF=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-readelf
HOSTSTRIP=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-strip
HOSTTYPE=x86_64
IFS=$' \t\n'
LD_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-ld
LD_FOR_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-ld
LD_LIBRARY_PATH=/usr/lib/csl-musl-x86_64:/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib:/workspace/x86_64-linux-musl-cxx11/destdir/lib:/workspace/x86_64-linux-musl-cxx11/destdir/lib64:/opt/x86_64-linux-musl/x86_64-linux-musl/lib64:/opt/x86_64-linux-musl/x86_64-linux-musl/lib:/opt/x86_64-w64-mingw32/x86_64-w64-mingw32/lib64:/opt/x86_64-w64-mingw32/x86_64-w64-mingw32/lib:/workspace/destdir/lib64:/workspace/destdir/lib
LIPO_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-lipo
LIPO_FOR_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-lipo
LLVM_HOST_TARGET=x86_64-linux-musl
LLVM_TARGET=x86_64-w64-mingw32
MACHTYPE=x86_64-linux-musl
MESON_HOST_TOOLCHAIN=/opt/toolchains/x86_64-linux-musl-cxx11/host_x86_64-linux-musl.meson
MESON_TARGET_TOOLCHAIN=/opt/toolchains/x86_64-w64-mingw32-libgfortran3-cxx03/target_x86_64-w64-mingw32.meson
NM_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-nm
NM_FOR_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-nm
OBJCOPY_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-objcopy
OBJCOPY_FOR_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-objcopy
OBJDUMP_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-objdump
OBJDUMP_FOR_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-objdump
OLDPWD=/workspace/srcdir
OPTERR=1
OPTIND=1
OSTYPE=linux-musl
PATH=/opt/bin/x86_64-w64-mingw32-libgfortran3-cxx03:/opt/x86_64-w64-mingw32/bin:/opt/bin/x86_64-linux-musl-cxx11:/opt/x86_64-linux-musl/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/workspace/x86_64-linux-musl-cxx11/destdir/bin:/workspace/destdir/bin
PIPESTATUS=([0]="0")
PKG_CONFIG_PATH=/workspace/destdir/lib/pkgconfig:/workspace/destdir/lib64/pkgconfig:/workspace/destdir/share/pkgconfig
PKG_CONFIG_SYSROOT_DIR=/workspace/destdir
PROG=go
PS1=$'\\[\E[94m\\]sandbox\\[\E[0m\\]:\\[\E[33m\\]${PWD//$WORKSPACE/$\\{WORKSPACE\\}}\\[\E[0m\\] \\$ '
PS4='+ '
PWD=/workspace/srcdir/exiftool
RANLIB_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-ranlib
RANLIB_FOR_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-ranlib
READELF_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-readelf
READELF_FOR_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-readelf
RET=1
SHARD_NAME=go
SHELL=/bin/bash
SHLVL=1
SOURCE_DATE_EPOCH=0
SRC_NAME=exiftool
STRIP_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-strip
STRIP_FOR_BUILD=/opt/bin/x86_64-linux-musl-cxx11/x86_64-linux-musl-strip
TERM=screen
USER=yakir
USE_CCACHE=false
V=false
VERBOSE=false
WORKSPACE=/workspace
ZERO_AR_DATE=1
_=+x
_script=/etc/profile.d/ps1.sh
bb_full_target=x86_64-w64-mingw32-libgfortran3-cxx03
bb_target=x86_64-w64-mingw32
bindir=/workspace/destdir/bin
dlext=dll
exeext=.exe
host_bindir=/workspace/x86_64-linux-musl-cxx11/destdir/bin
host_includedir=/workspace/x86_64-linux-musl-cxx11/destdir/include
host_libdir=/workspace/x86_64-linux-musl-cxx11/destdir/lib
host_prefix=/workspace/x86_64-linux-musl-cxx11/destdir
includedir=/workspace/destdir/include
libdir=/workspace/destdir/bin
nbits=64
nproc=32
prefix=/workspace/destdir
proc_family=intel
rust_host=x86_64-unknown-linux-musl
rust_target=x86_64-pc-windows-gnu
target=x86_64-w64-mingw32
auto_install_license () 
{ 
    set +e;
    if [[ ! -d "${prefix}/share/licenses/${SRC_NAME}" ]]; then
        DIR="${WORKSPACE}/srcdir";
        LICENSE_FILENAMES=();
        for bname in COPYING COPYRIGHT LICENCE LICENSE NOTICE;
        do
            for extension in "" .md .rtf .txt .MIT .BSD .GPL .GPLv2 .GPLv3;
            do
                LICENSE_FILENAMES+=(-iname "${bname}${extension}" -o);
            done;
        done;
        unset 'LICENSE_FILENAMES[${#LICENSE_FILENAMES[@]}-1]';
        qfind "${DIR}" -maxdepth 1 -type f \( "${LICENSE_FILENAMES[@]}" \) -exec install_license '{}' \;;
        if [[ -z "$(qfind "${prefix}/share/licenses/${SRC_NAME}" -mindepth 1)" ]]; then
            dirs=$(qfind "${DIR}" -mindepth 1 -maxdepth 1 -type d -path "${DIR}/patches" -prune -o -print);
            if [[ "$(echo "$dirs" | wc -l)" -eq 1 ]]; then
                DIR="${dirs}";
                qfind "${DIR}" -maxdepth 1 -type f \( "${LICENSE_FILENAMES[@]}" \) -exec install_license '{}' \;;
            fi;
        fi;
    fi;
    if [[ "${@}" == "-c" ]]; then
        if [[ -d "${prefix}/share/licenses/${SRC_NAME}" ]]; then
            return 0;
        else
            return 1;
        fi;
    fi
}
cargo () 
{ 
    if [ -z "$(qwhich cargo)" ]; then
        echo "You tried to run 'cargo' which requires the 'rust' shard; add 'compilers=[:rust]' to your invocation!" 1>&2;
        return 1;
    else
        unset -f cargo;
        cargo "$@";
    fi
}
compiler_shard_def () 
{ 
    PROG="$1";
    SHARD_NAME="$2";
    if [[ -z "$(qwhich "$PROG")" ]]; then
        eval "${PROG}() {             if [ -z \"\$(qwhich ${PROG})\" ]; then                 echo \"You tried to run '$PROG' which requires the '$SHARD_NAME' shard; add 'compilers=[:${SHARD_NAME}]' to your invocation!\" >&2;                 return 1;             else                 unset -f $PROG
                $PROG \"\$@\";             fi;         }";
    fi
}
go () 
{ 
    if [ -z "$(qwhich go)" ]; then
        echo "You tried to run 'go' which requires the 'go' shard; add 'compilers=[:go]' to your invocation!" 1>&2;
        return 1;
    else
        unset -f go;
        go "$@";
    fi
}
qfind () 
{ 
    find "$@" 2> /dev/null
}
qwhich () 
{ 
    which "$@" 2> /dev/null
}
rustc () 
{ 
    if [ -z "$(qwhich rustc)" ]; then
        echo "You tried to run 'rustc' which requires the 'rust' shard; add 'compilers=[:rust]' to your invocation!" 1>&2;
        return 1;
    else
        unset -f rustc;
        rustc "$@";
    fi
}
save_env () 
{ 
    set +x;
    set > /meta/.env;
    for l in BASHOPTS BASH_VERSINFO UID EUID PPID SHELLOPTS;
    do
        grep -v "^$l=" /meta/.env > /meta/.env2;
        mv /meta/.env2 /meta/.env;
    done;
    echo "cd $(pwd)" >> /meta/.env
}
save_history () 
{ 
    if [[ "${BASH_COMMAND}" == trap* ]] || [[ "${BASH_COMMAND}" == false ]]; then
        return;
    fi;
    vecho_red " ---> ${BASH_COMMAND}";
    history -s "${BASH_COMMAND}";
    history -a
}
use_apk () 
{ 
    echo "You tried to run '$1', but the package manager is 'apk'; try running 'apk add <package name>' instead!" 1>&2;
    return 1
}
vecho () 
{ 
    if [ "${VERBOSE}" = "true" ]; then
        echo "$@";
    fi
}
vecho_red () 
{ 
    vecho "$@" 1>&2
}
cd /workspace/srcdir/exiftool
